 /*
 * SPI interface for DRV8704 Dual H-Bridge Controller
 * 
 * 
 * The circuit 
 * - SCLK: to SCK(ICSP-3) or digital pin 13
 * - SDATI: MOSI(ICSP-4) or digital pin 11
 * - SCS: 10 (slave select pin)
 * - SDATO: MISO(ICSP-1) or digital pin 12
 * 
 * by REV Motor Controller Team 
 */

//include the SPI library 
//configure the pins used for the connection with the chip
#include <SPI.h>
#define DATAOUT 11 //MOSI
#define DATAIN 12 //MISO
#define SPICLK 13//sclk
#define SCS 10 //slave select

//DRV8704's register addresses:
const int CTRL = 0x0;
const int TORQUE = 0x1;
const int OFF = 0x2;
const int BLANK = 0x3;
const int DECAY = 0x4;
const int DRIVE = 0x6;
const int STATUS = 0x7;

unsigned int data;

 
//**** Configure the Motor Driver's Settings ****//
void setup()
{
  //set input and output pins
  pinMode(SCS, OUTPUT);
  pinMode(DATAOUT, OUTPUT);
  pinMode(DATAIN, INPUT);
  pinMode(SPICLK, OUTPUT);
  SPI.beginTransaction(SPISettings(140000, MSBFIRST, SPI_MODE0));

  SPI.setDataMode(SPI_MODE0);
  Serial.begin(9600);



  }


// Write to SPI addresses 
void spiWriteReg(unsigned int address, unsigned int value){ //ADDRESS must be < 7
  /*take the SCS pin high to select the chip 
  Write/Read bit(15) needs to be 0 for a write */
   digitalWrite(SCS, HIGH);

   address = address << 12;
   address &= ~0x8000;
   value |= address; // 16-bit data to be sent 
  SPI.transfer16(value);
  
  // take the SCS pin low to de-select the chip 
  digitalWrite(SCS, LOW);
  } 


unsigned int spiReadReg(unsigned int address){ //Address: 0xXXXA with A <= 7
  // take the SCS pin high to select the chip 
  // Write/Read bit(15) needs to be 1 for a read
  unsigned int data;    
  unsigned int value;
 
  digitalWrite(SCS, HIGH);
  address = (address << 12); 
  address |= 0x8000; //bit mask to set MSB to 1
  
  value = SPI.transfer16(address);  // read from address 
  
  // take the SCS pin low to de-select the chip 
  digitalWrite(SCS, LOW);
  return value;
  } 
  
 boolean spiCheckParam(unsigned int address, int[] correct_vals){
 
   
 
 
 }
  
void loop(){

    //spiWriteReg(0x6, 0x0FF0);  // NEVER SEND ADDRESS > 7!!
    //delay(100);
    data = spiReadReg(0x6);

    }


  